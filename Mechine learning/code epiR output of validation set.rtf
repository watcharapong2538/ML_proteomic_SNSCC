{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Load epiR package\
# this code use the output of validation set (20% of dataset)\
# Correctly classified proportion = accuracy\
# Positive Predictive Value (PPV) = Precision\
library(epiR)\
\
# Gradientboost\
y_predict_GB <- c(0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 1)\
y_test_GB <- c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\
# Calculate TP, FP, TN, FN\
TP_GB <- sum(y_predict_GB == 1 & y_test_GB == 1)\
FP_GB <- sum(y_predict_GB == 1 & y_test_GB == 0)\
TN_GB <- sum(y_predict_GB == 0 & y_test_GB == 0)\
FN_GB <- sum(y_predict_GB == 0 & y_test_GB == 1)\
\
\
# Create confusion matrix\
confusion_matrix_GB <- matrix(c(TP_GB, FN_GB, FP_GB, TN_GB), \
                              nrow = 2, \
                              dimnames = list("Prediction" = c("1", "0"),\
                                              "Actual" = c("1", "0")))\
print(confusion_matrix_GB)\
# Apply epi.tests\
test_results_GB <- epi.tests(confusion_matrix_GB)\
# Print the results\
print(test_results_GB)\
\
\
# LogisticRegression\
y_predict_LR <- c(1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\
y_test_LR <- c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\
\
# Calculate TP, FP, TN, FN\
TP_LR <- sum(y_predict_LR == 1 & y_test_LR == 1)\
FP_LR <- sum(y_predict_LR == 1 & y_test_LR == 0)\
TN_LR <- sum(y_predict_LR == 0 & y_test_LR == 0)\
FN_LR <- sum(y_predict_LR == 0 & y_test_LR == 1)\
\
# Create confusion matrix\
confusion_matrix_LR <- matrix(c(TP_LR, FN_LR, FP_LR, TN_LR), \
                              nrow = 2, \
                              dimnames = list("Prediction" = c("1", "0"),\
                                              "Actual" = c("1", "0")))\
\
# Print confusion matrix\
print(confusion_matrix_LR)\
# Apply epi.tests\
test_results_LR <- epi.tests(confusion_matrix_LR)\
# Print the results\
print(test_results_LR)\
\
\
# Suportor vector mechine\
y_predict_SVM <- c(1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\
y_test_SVM <- c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\
\
# Calculate TP, FP, TN, FN\
TP_SVM <- sum(y_predict_SVM == 1 & y_test_SVM == 1)\
FP_SVM <- sum(y_predict_SVM == 1 & y_test_SVM == 0)\
TN_SVM <- sum(y_predict_SVM == 0 & y_test_SVM == 0)\
FN_SVM <- sum(y_predict_SVM == 0 & y_test_SVM == 1)\
\
# Create confusion matrix\
confusion_matrix_SVM <- matrix(c(TP_SVM, FN_SVM, FP_SVM, TN_SVM), \
                              nrow = 2, \
                              dimnames = list("Prediction" = c("1", "0"),\
                                              "Actual" = c("1", "0")))\
\
# Print confusion matrix\
print(confusion_matrix_SVM)\
# Apply epi.tests\
test_results_SVM <- epi.tests(confusion_matrix_SVM)\
# Print the results\
print(test_results_SVM)\
\
\
\
# Random Forest\
y_predict_RF <- c(1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\
y_test_RF <- c(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)\
\
# Calculate TP, FP, TN, FN\
TP_RF <- sum(y_predict_RF == 1 & y_test_RF == 1)\
FP_RF <- sum(y_predict_RF == 1 & y_test_RF == 0)\
TN_RF <- sum(y_predict_RF == 0 & y_test_RF == 0)\
FN_RF <- sum(y_predict_RF == 0 & y_test_RF == 1)\
\
# Create confusion matrix\
confusion_matrix_RF <- matrix(c(TP_RF, FN_RF, FP_RF, TN_RF), \
                               nrow = 2, \
                               dimnames = list("Prediction" = c("1", "0"),\
                                               "Actual" = c("1", "0")))\
\
# Print confusion matrix\
print(confusion_matrix_RF)\
# Apply epi.tests\
test_results_RF <- epi.tests(confusion_matrix_RF)\
# Print the results\
print(test_results_RF)\
\
}